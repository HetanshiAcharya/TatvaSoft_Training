@* @model HaloDocDataAccess.ViewModels.CountStatusWiseRequestModel;
 *@
 @using static HaloDocDataAccess.ViewModels.Constant;
@{
    Layout = "_AdminLayout";
   
}

@* --------------- Action's Partial View --------------------------  *@
@Html.Partial("AssignCase.cshtml")
@Html.Partial("CancelCase.cshtml")
@Html.Partial("BlockCase.cshtml")
@Html.Partial("TransferCase.cshtml")
@Html.Partial("AcceptCase.cshtml")
@Html.Partial("TransferToAdmin.cshtml")
@Html.Partial("EncounterPhysician.cshtml")
@Html.Partial("_EncounterFinalizeModal")


@* --------------- States of Admin resultant div ------------------  *@
<div class="tab-contents">
</div>
<div class="mt-0 px-2 bg-light">
    <partial name="_StatesofAdmin.cshtml"/>
    <div id="SearchResult">
    </div>

</div>
@* --------------- Script to call default NEW state ---------------- *@
<script>
    var isEncounter;
    $(document).ready(function () {
        isEncounter = new bootstrap.Modal("#EncounterFinalizeModal");
    });
    $(function () {
        var val = 1;
        $("#hiddenfirst").val(val);
        $("#filterForm").submit();
    });
    function clearcasepopup(id) {
        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: "btn btn-info m-2 shadow-none text-white",
                cancelButton: "btn btn-outline-info m-2"
            },
            buttonsStyling: false
        });

        swalWithBootstrapButtons.fire({
            title: "Confirmation For Clear Case",
            text: "Are sure you want to clear this request? Once clear this request then you not able to see this request.",
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: "Clear",
            cancelButtonText: "Cancel",
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '/Admin/ClearCase',
                    type: 'Post',
                    data: { RequestId: id },
                    success: function (data) {
                        console.log("Success");
                        location.reload();
                    },
                    error: function (e) {
                        console.log(e);
                    }
                });
            }
            
        });

    };
   


    function isEncounterFinalize(requestId) {
        $.ajax({
            url: '/Provider/isEncounterFinalize?RequestId=' + requestId,
            type: 'Get',
            data: { RequestId: requestId },
            success: function (data) {
                if (data) {
                    $("#EncounterFormID").val(requestId);
                    isEncounter.show();
                }
                else {
                    window.location.href = '/Admin/Encounter?RId=' + requestId;
                }
            },
            error: function (e) {
                console.log(e);
            }
        });
    }
</script>
